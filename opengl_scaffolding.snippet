<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">  
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>glshaderinit</Title>
			<Shortcut>glshaderinit</Shortcut>
			<Description>OpenGL shader initialize code scaffolding.</Description>
		</Header>
		<Snippet>
			<Code Language="CPP">
// Shader Source
const char *vertexShaderSource = R"(
	#version 460 core
			
	layout (location = 0) in vec3 pos;
			
	void main()
	{
		gl_Position = vec4(pos.x, pos.y, pos.z, 1.0);
	}
)";
const char *fragmentShaderSource = R"(
	#version 460 core

	out vec4 FragColor;

	void main()
	{
		// Orange
		FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);
	}
)";
// build and compile our shader program
// ------------------------------------
// vertex shader
int vertexShader = glCreateShader(GL_VERTEX_SHADER);
glShaderSource(vertexShader, 1, &amp;vertexShaderSource, NULL);
glCompileShader(vertexShader);
// check for shader compile errors
int success;
constexpr int InfoLength = 1024;
char infoLog[InfoLength];
glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &amp;success);
if (!success)
{
	glGetShaderInfoLog(vertexShader, InfoLength, NULL, infoLog);
}

// fragment shader
int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);
glShaderSource(fragmentShader, 1, &amp;fragmentShaderSource, NULL);
glCompileShader(fragmentShader);
// check for shader compile errors
glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &amp;success);
if (!success)
{
	glGetShaderInfoLog(fragmentShader, InfoLength, NULL, infoLog);
}

// link shaders
int shaderProgram = glCreateProgram();
glAttachShader(shaderProgram, vertexShader);
glAttachShader(shaderProgram, fragmentShader);
glLinkProgram(shaderProgram);
// check for linking errors
glGetProgramiv(shaderProgram, GL_LINK_STATUS, &amp;success);
if (!success)
{
	glGetProgramInfoLog(shaderProgram, InfoLength, NULL, infoLog);
}
glDeleteShader(vertexShader);
glDeleteShader(fragmentShader);
			</Code>
		</Snippet>
	</CodeSnippet>
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>glbufferinit</Title>
			<Shortcut>glbufferinit</Shortcut>
			<Description>OpenGL Core buffer initialize code scaffolding.</Description>
		</Header>
		<Snippet>
			<Code Language="CPP">
const GLfloat vertices[] =
{
    -0.5f, -0.5f, 0.0f,
     0.5f, -0.5f, 0.0f,
     0.0f,  0.5f, 0.0f
};

unsigned int vao, vbo;
glGenVertexArrays(1, &amp;vao);
glBindVertexArray(vao);

glGenBuffers(1, &amp;vbo);
glBindBuffer(GL_ARRAY_BUFFER, vbo);
glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);

glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, nullptr);
glEnableVertexAttribArray(0);
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>